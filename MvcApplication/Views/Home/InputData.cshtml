@using System.Linq
@model global::MvcApplication.Models.InputDataViewModel

@{
    ViewBag.Title = "InputData";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>InputData</h2>

<p>insert data</p>
<form id="inputForm" class="form-inline">
    <table>
        <tr>
            <td><label for="datepicker1">Parking begin:</label></td>
            <td>
                <div class='input-group date' id='datepicker1'>
                    <input placeholder="Start Date" class="form-control" type="text" id="datepickervalue1" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </td>
        </tr>
        <tr>
            <td><label for="datepicker1">Parking end:</label></td>
            <td>

                <div class='input-group date' id='datepicker2'>
                    <input placeholder="End Date" class="form-control" type="text" id="datepickervalue2" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>

            </td>
        </tr>
    </table>

    <br />
    <label for="users">Current user:</label>@Html.DropDownListFor(m => m.Clients.First().Id, new SelectList(Model.Clients, "Id", "Name"), new { id = "users", })
    <input type="button" value="Save" onclick="SaveData()"></input>
</form>

<script>
    $(function () {
        $("#datepicker1").datetimepicker();
        $("#datepicker2").datetimepicker();
    });
    function SaveData() {

        var data = {
            startdate : $("#datepickervalue1").val(),
            enddate : $("#datepickervalue2").val(),
            clientId: $("#users").val(),
            
        }
        console.log(JSON.stringify(data));
        $.ajax({
            type: "POST",
            url: "/api/rest",
            data: JSON.stringify(data),
            contentType: "application/json; charset=utf-8",
            crossDomain: true,
            dataType: "json",
            success: function (data, success) {

                alert(success);
            },

            error: function (jqXHR, status) {
                // error handler
                console.log(jqXHR);
                alert('fail' + status.code);
            }
        });
    }
</script>